version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: stock_ai_app
    restart: always
    volumes:
      - ./app:/app/app
      - ./data:/app/data
    environment:
      - PYTHONPATH=/app
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - US_STOCK_SYMBOLS=${US_STOCK_SYMBOLS}
      - KR_STOCK_SYMBOLS=${KR_STOCK_SYMBOLS}
    ports:
      - "8000:8000"
    command: python -m uvicorn app.main:app --host 0.0.0.0 --port 8000
    depends_on:
      - neo4j
      - redis
    networks:
      - stock_ai_network

  neo4j:
    image: neo4j:5.13.0
    container_name: stock_ai_neo4j
    restart: always
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_plugins:/plugins
    environment:
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD}
      - NEO4J_server_memory_pagecache_size=1G
      - NEO4J_server_memory_heap_initial__size=1G
      - NEO4J_server_memory_heap_max__size=2G
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
    networks:
      - stock_ai_network

  redis:
    image: redis:7.0
    container_name: stock_ai_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - stock_ai_network

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: stock_ai_celery_worker
    restart: always
    volumes:
      - ./app:/app/app
      - ./data:/app/data
    environment:
      - PYTHONPATH=/app
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - US_STOCK_SYMBOLS=${US_STOCK_SYMBOLS}
      - KR_STOCK_SYMBOLS=${KR_STOCK_SYMBOLS}
    command: python -m celery -A app.worker.celery worker --loglevel=info
    depends_on:
      - neo4j
      - redis
    networks:
      - stock_ai_network

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: stock_ai_celery_beat
    restart: always
    volumes:
      - ./app:/app/app
      - ./data:/app/data
    environment:
      - PYTHONPATH=/app
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - US_STOCK_SYMBOLS=${US_STOCK_SYMBOLS}
      - KR_STOCK_SYMBOLS=${KR_STOCK_SYMBOLS}
    command: python -m celery -A app.worker.celery beat --loglevel=info
    depends_on:
      - neo4j
      - redis
      - celery_worker
    networks:
      - stock_ai_network

  telegram_bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: stock_ai_telegram_bot
    restart: always
    volumes:
      - ./app:/app/app
      - ./data:/app/data
    environment:
      - PYTHONPATH=/app
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - ADMIN_USER_IDS=${ADMIN_USER_IDS}
      - APP_HOST=app
      - APP_PORT=8000
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    command: python -m app.telegram_bot.bot
    depends_on:
      - neo4j
      - redis
    networks:
      - stock_ai_network

networks:
  stock_ai_network:
    driver: bridge

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_plugins:
  redis_data:
